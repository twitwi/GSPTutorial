
Running an existing pipeline: example with videos
=================================================

This tutorial just applies the previous one on a pipeline with images/videos.
If you want to do this tutorial, you need "gstreamer", see the tutorial-1 for details on its installation. 


Getting familiar with the pipeline
----------------------------------

You can first run it:

   ./run.sh   pipelines/pipeline-2-view-video.xml

You should see an uninteresting video.
You can also have a look at the pipeline (both the sources and the visualization):

   pipelines/pipeline-2-view-video.xml
   pipelines/pipeline-2-view-video.xml.svg

((Please note that if you see and the moving box is red, then something needs to be done, but for now you can continue like this.))


Playing with the pipeline
-------------------------

Here again you can play with the parameters.
The most interesting are illustrated here:

   ./run.sh pipelines/pipeline-2-view-video.xml   for.period=1
   ./run.sh pipelines/pipeline-2-view-video.xml   for.period=1 cons.level=0
   ./run.sh pipelines/pipeline-2-view-video.xml   for.period=333 view.exitOnClose=true
   ./run.sh pipelines/pipeline-2-view-video.xml   for.period=1 view.enabled=false

Maybe, you can play from a webcam:

   ./run.sh pipelines/pipeline-2-view-video.xml   for.period=1 view.exitOnClose=true in.uri=camera:0

And, you can even play streaming videos:

   # "despicable me" video
   ./run.sh pipelines/pipeline-2-view-video.xml   for.period=1 view.exitOnClose=true in.uri=$(youtube-dl/youtube-dl -g D_dvETGxO3w)

   # keyboard madness video
   ./run.sh pipelines/pipeline-2-view-video.xml   for.period=1 view.exitOnClose=true in.uri=$(youtube-dl/youtube-dl -g iJ9wNT21c_s)

